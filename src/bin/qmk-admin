#! /usr/bin/env python3
import os
import subprocess
from dialog import Dialog
from pathlib import Path


# full path here as it *could* change filesystems between runs
BACKUP_DOT_FILE = Path("/home/qmk/.qmk_backup_enable")

# Patch in clear screen support
Dialog.cls = lambda self: os.system('clear')

d = Dialog(autowidgetsize=True)
d.set_background_title('QMK Admin')
d.add_persistent_args(['--no-collapse', '--colors'])


def menu_backup_enable():
    _, tag = d.menu("""Backup User Files

\Zb\Z1User files within the Linux filesystem might be lost if not careful!\Zn

As a workaround, you can optionally enable periodic backups:
""", choices=[('1', 'Manual - Data still backed up on distro uninstall/upgrade'), ('2', '\Zb\Z2Recommended for new users\Zn - Backup every 15 mins')])
    if not tag:
        return False
    elif tag == '1':
        if BACKUP_DOT_FILE.exists():
            BACKUP_DOT_FILE.unlink()
    elif tag == '2':
        BACKUP_DOT_FILE.touch()
    return True


def menu_backup_now():
    os.system('qmk-backup')


def menu_backup_restore():
    os.system('qmk-backup --restore')


def menu_update():
    ans = d.yesno("Are you sure, this cannot be undone?")
    if ans == 'ok':
        # TODO: redirect text to d.programbox instead of showing raw output
        d.cls()
        os.system('sudo apt update')
        os.system('sudo apt upgrade -y')
        os.system('sudo python3 -m pip install qmk --upgrade')
        d.msgbox("Complete!")


def menu_welcome():
    ans = d.yesno("Hide welcome message?")
    os.system(f"qmk config user.hide_welcome={ans == 'ok'}")


def menu_backup():
    _, tag = d.menu("Backup User Files",
                    choices=[('1', 'Configure Backup'), ('2', 'Perform Backup'), ('3', 'Restore Backup')])
    if not tag:
        return False
    elif tag == '1':
        menu_backup_enable()
    elif tag == '2':
        menu_backup_now()
    elif tag == '3':
        menu_backup_restore()

    return True


def menu_about():
    d.tailbox("/etc/qmk-release")


def menu_main():
    _, tag = d.menu("Welcome to QMK WSL!",
                    choices=[('1', 'Quickstart'), ('2', 'Backup/Restore'), ('3', 'Welcome Message'), ('4', 'Update System'), ('5', 'Release Info')])
    if not tag:
        return False
    elif tag == '1':
        subprocess.run("qmk-wizard", shell=True)
        menu_backup_enable()
    elif tag == '2':
        menu_backup()
    elif tag == '3':
        menu_welcome()
    elif tag == '4':
        menu_update()
    elif tag == '5':
        menu_about()

    return True


if __name__ == "__main__":
    while menu_main():
        pass

    d.cls()
