name: CI

on:
  push:
    branches:
    - main
    paths-ignore:
    - 'docs/**'
  release:
    types:
      - published
  pull_request:
    paths-ignore:
    - 'docs/**'

jobs:
  root_fs:
    runs-on: ubuntu-latest

    env:
      VERSION: ${{github.event.release.tag_name}}

    steps:
    - uses: actions/checkout@v3

    - name: Populate config
      run: |
        echo "VERSION_ID=$GITHUB_SHA" >> src/etc/qmk-release
        echo "VERSION=${VERSION:-2.0.0}" >> src/etc/qmk-release

    - name: Build Docker image
      run: |
        docker build -t qmkfm/qmk_distro_wsl .

    - name: Export Docker image
      run: |
        docker export $(docker create qmkfm/qmk_distro_wsl:latest) | gzip > .build/install.tar.gz

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: .build/*


  drivers:
    runs-on: ubuntu-latest

    steps:
    - uses: Legion2/download-release-action@v2.1.0
      with:
        repository: qmk/qmk_driver_installer
        tag: 'latest'
        path: .build/
        file: qmk_driver_installer.exe

    - name: Download Config
      run: |
        sudo wget -P .build/ https://raw.githubusercontent.com/qmk/qmk_firmware/master/util/drivers.txt

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: .build/*

  launcher:
    runs-on: ubuntu-latest

    steps:
    - uses: Legion2/download-release-action@v2.1.0
      with:
        repository: yuk7/wsldl
        tag: '21062500'
        path: .build/
        file: Launcher.exe
  
    - name: Configure Launcher
      run: |
        sudo mv .build/Launcher.exe .build/QMK.exe

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: .build/*

  build:
    runs-on: windows-latest

    needs: [root_fs, launcher, drivers]

    env:
      VERSION: ${{github.event.release.tag_name}}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: .build

      - name: Create Installer
        shell: 'bash {0}'
        run: |
          iscc installer/install.iss //DMyAppVersion=${VERSION:-0.0.0}
          sha256sum .build/QMK_WSL.exe > .build/QMK_WSL.exe.sha256

      - uses: actions/upload-artifact@v2
        with:
          name: installer
          path: .build/QMK_WSL.*

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: artifacts

  test:
    runs-on: windows-latest

    needs: [build]

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installer

      - name: Run Install
        run: |
          Start-Process QMK_WSL.exe -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART" -wait

      - name: Run QMK cli
        shell: cmd
        run: |
          wsl -d QMK -u root -- bash -c "qmk -h | grep 'CLI wrapper for running QMK commands'"

  publish_release:
    runs-on: ubuntu-latest

    needs: [test]

    if: github.event.release.tag_name

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installer
          path: .build

      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.event.release.name }}
          files: |
            .build/*

  publish_beta:
    runs-on: ubuntu-latest

    needs: [test]

    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installer
          path: .build

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "beta"
          prerelease: true
          title: "Latest Beta"
          files: |
            .build/*
